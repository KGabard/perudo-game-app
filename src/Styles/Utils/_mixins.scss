// @mixin heading-shadow($colour:lightness-shift($colour-primary), $offset: $heading-shadow-size){
//     text-shadow: $offset $offset $colour;
// }

@mixin button(
  $width: $button-width,
  $height: $button-height,
  $color: $highlight-secondary
) {
  width: $width;
  height: $height;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  border: 3px solid $color;
  border-radius: 24px;
  @include typographies(title);
  cursor: pointer;
  transition: background-color 0.15s ease-in-out;
  &:hover {
    background-color: $color;
  }
}

@mixin ok-btn($color: $neutral-secondary) {
  @include button(80px, 40px);
  border-color: $color;
  &:hover {
    background-color: $color;
  }
}

@mixin message-window(
  $primary-color: $neutral-primary,
  $secondary-color: $neutral-secondary
) {
  width: 440px;
  display: flex;
  flex-direction: column;
  padding: 32px 24px;
  gap: 16px;
  background-color: $primary-color;
  border: 3px solid $secondary-color;
  border-radius: 32px;
}

@mixin arrow-btn($arrow: $arrow, $hoveredArrow: $arrow-highlight) {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  content: $arrow;
  cursor: pointer;
  &:hover {
    content: $hoveredArrow;
  }
}

@mixin menu {
  position: absolute;
  width: 100vw;
  min-height: 100vh;
  z-index: 50;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: fit-content;
  &__overlay {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    background-color: $neutral-primary;
    opacity: 0.5;
  }
  &__window {
    @include message-window;
    height: fit-content;
    margin: 112px 0 64px;
    width: fit-content;
    position: relative;
  }
  &__header {
    width: 100%;
    text-align: center;
    @include typographies(header);
    margin-bottom: 16px;
  }
  &__okBtn {
    align-self: end;
    margin-top: 16px;
    @include button($ok-button-width, $ok-button-height, $neutral-secondary);
    color: $basic-white;
  }
}

@mixin menu-component {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  gap: 32px;
  &__label {
    @include typographies(subtitle);
  }
}

@mixin number-container {
  &__numberContainer {
    position: relative;
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto auto;
    justify-content: center;
    align-items: center;
    column-gap: 4px;
  }
  &__number {
    width: 56px;
    height: 56px;
    border: 3px solid $basic-white;
    border-radius: 8px;
    grid-row: span 2;
    // outline: none;
    // caret-color: transparent;
    // color: $basic-white;
    // background: transparent;
    // text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    @include typographies(title);
  }
  &__upArrow {
    @include arrow-btn($arrow, $arrow-neutral);
    transform: rotate(0deg);
    left: 2px;
    bottom: -28px;
  }
  &__downArrow {
    @include arrow-btn($arrow, $arrow-neutral);
    transform: rotate(180deg);
    right: 2px;
    bottom: -28px;
  }
}

@mixin tablet-and-mobile {
  @media screen and (max-width: 888px) {
    @content;
  }
}

@mixin tablet-only {
  @media screen and (max-width: 888px) and (min-width: 426px) {
    @content;
  }
}

@mixin mobile-only {
  @media screen and (max-width: 426px) {
    @content;
  }
}

@mixin mobile-only-375 {
  @media screen and (max-width: 376px) {
    @content;
  }
}

@mixin mobile-only-320 {
  @media screen and (max-width: 330px) {
    @content;
  }
}

@mixin position-center($width, $height) {
  position: absolute;
  left: calc(50% - $width / 2);
  top: calc(50% - $height / 2);
}

@mixin position-bottom-center($width, $height) {
  position: absolute;
  left: calc(50% - $width / 2);
  top: calc(100% - $height / 2);
}

@mixin position-top-center($width, $height) {
  position: absolute;
  left: calc(50% - $width / 2);
  top: calc(0% - $height / 2);
}

@mixin position-left-center($width, $height) {
  position: absolute;
  left: calc(0% - $width / 2);
  top: calc(50% - $height / 2);
}

@mixin typographies($type) {
  $typography: map-get($typographies, $type);
  @each $attribute, $val in $typography {
    #{$attribute}: #{$val};
  }
}
